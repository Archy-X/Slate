import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'java'
    id 'maven-publish'
}

apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'com.github.johnrengelman.shadow'

group = 'com.archyx'
version = '1.0.0'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven {
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
        content {
            includeGroup 'org.bukkit'
            includeGroup 'org.spigotmc'
        }
    }
    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url = 'https://oss.sonatype.org/content/repositories/central' }
    maven {
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
    maven {
        url = "https://repo.codemc.io/repository/maven-public/"
    }
    maven {
        name = 'skullcreator-repo'
        url = 'https://github.com/deanveloper/SkullCreator/raw/mvn-repo/'
    }
}

dependencies {
    compileOnly 'com.github.Archy-X:SmartInvs:1.3.0'
    compileOnly 'com.github.cryptomorin:XSeries:8.6.1'
    compileOnly 'de.tr7zw:item-nbt-api:2.8.0'
    compileOnly 'dev.dbassett:skullcreator:3.0.1'
    implementation "net.kyori:adventure-text-minimessage:4.11.0"
    implementation "net.kyori:adventure-platform-bukkit:4.1.2"
    compileOnly 'org.spigotmc:spigot-api:1.18.2-R0.1-SNAPSHOT'
    compileOnly 'me.clip:placeholderapi:2.10.10'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

shadowJar {
    archiveName = "$baseName-$version.$extension"
    relocate 'net.kyori.adventure', 'com.archyx.slate.adventure'
    relocate 'net.kyori.examination', 'com.archyx.slate.examination'
}

artifacts {
    archives sourcesJar
    archives javadocJar
    archives shadowJar
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        filter ReplaceTokens, tokens: [version: version]
    }
}

build.dependsOn shadowJar
